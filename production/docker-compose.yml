version: '3.9'

x-logging:
  &logging
  logging:
    driver: loki
    options:
      loki-url: http://172.22.22.15:3100/loki/api/v1/push
      loki-retries: 5
      loki-batch-size: 400

services:
  mongodb-prod:
    image: mongo:latest
    container_name: mongodb-prod
    restart: unless-stopped
    env_file:
      - ./.env.db
    ports:
      - 37017:27017
    logging:
      driver: "json-file"
      options:
        max-size: "400k"
        max-file: "20"
    volumes:
      - mongodb_data_container:/data/db
      - type: bind
        source: ../init-mongo.sh
        target: /docker-entrypoint-initdb.d/init-mongo.sh
        read_only: true
    networks:
      - production
      - monitoring

  rabbitmq-prod:
    image: rabbitmq:3-management
    restart: unless-stopped
    ports:
        - 15672:15672
    volumes:
        - rmq_data_container:/var/lib/rabbitmq/
    env_file:
      - ./.env.rmq
    networks:
      - production
      - monitoring
    <<: *logging

  redis-discord-bot-prod:
    image: redis:7.0.11
    restart: unless-stopped
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    volumes:
      - type: bind
        source: ./redis/discordBot.conf
        target: /usr/local/etc/redis/redis.conf
        read_only: true
    networks:
      - production
      - monitoring
    <<: *logging

  redis-discord-analyzer-prod:
    image: redis:7.0.11
    restart: unless-stopped
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    volumes:
      - type: bind
        source: ./redis/discordAnalyzer.conf
        target: /usr/local/etc/redis/redis.conf
        read_only: true
    networks:
      - production
      - monitoring
    <<: *logging

  neo4j-prod:
    image: neo4j:5.9.0
    restart: unless-stopped
    ports:
      - 27474:7474
      - 27687:7687
    env_file:
      - ./.env.neo4j
    volumes:
      - neo4j_conf:/var/lib/neo4j/conf
      - neo4j_data:/data
      - neo4j_import:/import
      - neo4j_plugins:/plugins
    environment:
      # Raise memory limits
      - NEO4J_server.memory.heap.initial_size=2G
      - NEO4J_server.memory.heap.max_size=4G
      - NEO4J_PLUGINS=["apoc", "graph-data-science"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,gds.*
    networks:
      - production
      - monitoring
    <<: *logging

  tc-server-comm-prod:
    build:
      context: ../../tc-serverComm
      dockerfile: Dockerfile
      tags:
        - tc-server-comm:${VERSION:-latest}
    restart: unless-stopped
    environment:
      PORT: $PORT
    ports:
      - $HOST:$PORT:$PORT
    env_file:
      - ./.env.proc
    depends_on:
      - mongodb-prod
      - neo4j-prod
      - rabbitmq-prod
    networks:
      - production
      - monitoring
    <<: *logging

  tc-discord-bot-prod:
    build:
      context: ../../tc-discordBot
      target: prod
      dockerfile: Dockerfile
      tags:
        - tc-discord-bot:${VERSION:-latest}
    restart: unless-stopped
    env_file:
      - ./.env.bot.proc
    depends_on:
      - mongodb-prod
      - redis-discord-bot-prod
      - rabbitmq-prod
    networks:
      - production
      - monitoring
    <<: *logging

  tc-discord-analyzer-server-prod:
    build:
      context: ../tc-DAOlytics-operation
      target: prod-server
      dockerfile: Dockerfile
      args:
        - GITHUB_TOKEN=${GITHUB_TOKEN}
      tags:
        - tc-discord-analyzer:${VERSION:-latest}
    restart: unless-stopped
    env_file:
      - ./.env.analyzer.proc
    depends_on:
      - redis-discord-analyzer-prod
      - rabbitmq-prod
    networks:
      - production
      - monitoring
    <<: *logging

  tc-discord-analyzer-worker-prod:
    build:
      context: ../tc-DAOlytics-operation
      target: prod-worker
      dockerfile: Dockerfile
      args:
        - GITHUB_TOKEN=${GITHUB_TOKEN}
      tags:
        - tc-discord-analyzer:${VERSION:-latest}
    restart: unless-stopped
    env_file:
      - ./.env.analyzer.proc
    depends_on:
      - mongodb-prod
      - redis-discord-analyzer-prod
      - neo4j-prod
    networks:
      - production
      - monitoring
    <<: *logging


  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    ports:
      - 4000:3000
    volumes:
      - grafana_volume:/var/lib/grafana
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_volume:/prometheus
    depends_on:
      - cadvisor
    networks:
      - monitoring

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      - redis-cadvisor
    networks:
      - monitoring

  redis-cadvisor:
    image: redis:latest
    container_name: redis
    ports:
      - 9379:6379
    networks:
      - monitoring
    
  loki:
    container_name: loki
    image: grafana/loki:2.8.0
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - ./loki/loki-config.yaml:/etc/loki/loki-config.yaml
      - loki_data:/data/loki
    command: -config.file=/etc/loki/loki-config.yaml
    networks:
      monitoring:
        ipv4_address: 172.22.22.15

  promtail:
    container_name: promtail
    image: grafana/promtail:2.8.0
    restart: unless-stopped
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./promtail/promtail-config.yaml:/etc/promtail/promtail-config.yaml
    command: -config.file=/etc/promtail/promtail-config.yaml
    networks:
      - monitoring

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    # expose:
    #   - 9100
    networks:
      - monitoring

volumes:
  mongodb_data_container:
  rmq_data_container:
  # neo4j_data_container:
  # neo4j_conf_container:
  # neo4j_import_container:
  # neo4j_plugins_container:
  grafana_volume:
  prometheus_volume:
  loki_data:
  neo4j_data:
  neo4j_import:
  neo4j_plugins:
  neo4j_conf:

networks:
  production:
    driver: bridge
  monitoring:
    driver: bridge
    ipam:
      config:
        - subnet: 172.22.22.0/16